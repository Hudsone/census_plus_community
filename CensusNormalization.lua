--[[
	CensusPlus for World of Warcraft(tm).
	
	Copyright 2025 Hsiwei Chang (Hudsone)

	License:
		This program is free software; you can redistribute it and/or
		modify it under the terms of the GNU General Public License
		as published by the Free Software Foundation; either version 3
		of the License, or (at your option) any later version.

		This program is distributed in the hope that it will be useful,
		but WITHOUT ANY WARRANTY; without even the implied warranty of
		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
		GNU General Public License for more details.

		You should have received a copy of the GNU General Public License
		along with this program(see GLP.txt); if not, write to the Free Software
		Foundation, Inc., 52 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
]]

local _, addon_tableID     = ...
local CPp                  = addon_tableID
CPp.Normalization          = {}
local NLZN                 = CPp.Normalization

if IntellisenseTrick_ExposeGlobal then
  Normalization = NLZN
end

---@enum CLASS
NLZN.CLASS                 = {
  UNSPECIFIED = '',
  DRUID = 'DRUID',
  HUNTER = 'HUNTER',
  MAGE = 'MAGE',
  PRIEST = 'PRIEST',
  ROGUE = 'ROGUE',
  WARLOCK = 'WARLOCK',
  WARRIOR = 'WARRIOR',
  SHAMAN = 'SHAMAN',
  PALADIN = 'PALADIN',
  DEATHKNIGHT = 'DEATHKNIGHT',
  MONK = 'MONK',
  DEMONHUNTER = 'DEMONHUNTER',
  EVOKER = 'EVOKER',
}

---@enum RACE
NLZN.RACE                  = {
  UNSPECIFIED = '',
  DWARF = 'DWARF',
  GNOME = 'GNOME',
  HUMAN = 'HUMAN',
  NIGHTELF = 'NIGHTELF',
  DRAENEI = 'DRAENEI',
  WORGEN = 'WORGEN',
  PANDAREN = 'PANDAREN',
  LIGHTFORGED = 'LIGHTFORGED',
  VOIDELF = 'VOIDELF',
  DARKIRON = 'DARKIRON',
  KULTIRAN = 'KULTIRAN',
  MECHAGNOME = 'MECHAGNOME',
  ORC = 'ORC',
  TAUREN = 'TAUREN',
  TROLL = 'TROLL',
  UNDEAD = 'UNDEAD',
  BLOODELF = 'BLOODELF',
  GOBLIN = 'GOBLIN',
  HIGHMOUNTAIN = 'HIGHMOUNTAIN',
  NIGHTBORNE = 'NIGHTBORNE',
  MAGHAR = 'MAGHAR',
  ZANDALARI = 'ZANDALARI',
  VULPERA = 'VULPERA',
  DRACTHYR = 'DRACTHYR',
  EARTHEN = 'EARTHEN',
}

local N                    = {}
N[CENSUSPLUS_DRUID]        = NLZN.CLASS.DRUID
N[CENSUSPLUS_HUNTER]       = NLZN.CLASS.HUNTER
N[CENSUSPLUS_MAGE]         = NLZN.CLASS.MAGE
N[CENSUSPLUS_PRIEST]       = NLZN.CLASS.PRIEST
N[CENSUSPLUS_ROGUE]        = NLZN.CLASS.ROGUE
N[CENSUSPLUS_WARLOCK]      = NLZN.CLASS.WARLOCK
N[CENSUSPLUS_WARRIOR]      = NLZN.CLASS.WARRIOR
N[CENSUSPLUS_SHAMAN]       = NLZN.CLASS.SHAMAN
N[CENSUSPLUS_PALADIN]      = NLZN.CLASS.PALADIN
N[CENSUSPLUS_DEATHKNIGHT]  = NLZN.CLASS.DEATHKNIGHT
N[CENSUSPLUS_MONK]         = NLZN.CLASS.MONK
N[CENSUSPLUS_DEMONHUNTER]  = NLZN.CLASS.DEMONHUNTER
N[CENSUSPLUS_EVOKER]       = NLZN.CLASS.EVOKER
N[CENSUSPLUS_DWARF]        = NLZN.RACE.DWARF
N[CENSUSPLUS_GNOME]        = NLZN.RACE.GNOME
N[CENSUSPLUS_HUMAN]        = NLZN.RACE.HUMAN
N[CENSUSPLUS_NIGHTELF]     = NLZN.RACE.NIGHTELF
N[CENSUSPLUS_DRAENEI]      = NLZN.RACE.DRAENEI
N[CENSUSPLUS_WORGEN]       = NLZN.RACE.WORGEN
N[CENSUSPLUS_APANDAREN]    = NLZN.RACE.PANDAREN
N[CENSUSPLUS_LIGHTFORGED]  = NLZN.RACE.LIGHTFORGED
N[CENSUSPLUS_VOIDELF]      = NLZN.RACE.VOIDELF
N[CENSUSPLUS_DARKIRON]     = NLZN.RACE.DARKIRON
N[CENSUSPLUS_KULTIRAN]     = NLZN.RACE.KULTIRAN
N[CENSUSPLUS_MECHAGNOME]   = NLZN.RACE.MECHAGNOME
N[CENSUSPLUS_ORC]          = NLZN.RACE.ORC
N[CENSUSPLUS_TAUREN]       = NLZN.RACE.TAUREN
N[CENSUSPLUS_TROLL]        = NLZN.RACE.TROLL
N[CENSUSPLUS_UNDEAD]       = NLZN.RACE.UNDEAD
N[CENSUSPLUS_BLOODELF]     = NLZN.RACE.BLOODELF
N[CENSUSPLUS_GOBLIN]       = NLZN.RACE.GOBLIN
N[CENSUSPLUS_HPANDAREN]    = NLZN.RACE.PANDAREN
N[CENSUSPLUS_HIGHMOUNTAIN] = NLZN.RACE.HIGHMOUNTAIN
N[CENSUSPLUS_NIGHTBORNE]   = NLZN.RACE.NIGHTBORNE
N[CENSUSPLUS_MAGHAR]       = NLZN.RACE.MAGHAR
N[CENSUSPLUS_ZANDALARI]    = NLZN.RACE.ZANDALARI
N[CENSUSPLUS_VULPERA]      = NLZN.RACE.VULPERA
N[CENSUSPLUS_DRACTHYR]     = NLZN.RACE.DRACTHYR
N[CENSUSPLUS_EARTHEN]      = NLZN.RACE.EARTHEN

local T                    = {}
T[NLZN.CLASS.DRUID]        = CENSUSPLUS_DRUID
T[NLZN.CLASS.HUNTER]       = CENSUSPLUS_HUNTER
T[NLZN.CLASS.MAGE]         = CENSUSPLUS_MAGE
T[NLZN.CLASS.PRIEST]       = CENSUSPLUS_PRIEST
T[NLZN.CLASS.ROGUE]        = CENSUSPLUS_ROGUE
T[NLZN.CLASS.WARLOCK]      = CENSUSPLUS_WARLOCK
T[NLZN.CLASS.WARRIOR]      = CENSUSPLUS_WARRIOR
T[NLZN.CLASS.SHAMAN]       = CENSUSPLUS_SHAMAN
T[NLZN.CLASS.PALADIN]      = CENSUSPLUS_PALADIN
T[NLZN.CLASS.DEATHKNIGHT]  = CENSUSPLUS_DEATHKNIGHT
T[NLZN.CLASS.MONK]         = CENSUSPLUS_MONK
T[NLZN.CLASS.DEMONHUNTER]  = CENSUSPLUS_DEMONHUNTER
T[NLZN.CLASS.EVOKER]       = CENSUSPLUS_EVOKER
T[NLZN.RACE.DWARF]         = CENSUSPLUS_DWARF
T[NLZN.RACE.GNOME]         = CENSUSPLUS_GNOME
T[NLZN.RACE.HUMAN]         = CENSUSPLUS_HUMAN
T[NLZN.RACE.NIGHTELF]      = CENSUSPLUS_NIGHTELF
T[NLZN.RACE.DRAENEI]       = CENSUSPLUS_DRAENEI
T[NLZN.RACE.WORGEN]        = CENSUSPLUS_WORGEN
T[NLZN.RACE.PANDAREN]      = CENSUSPLUS_APANDAREN
T[NLZN.RACE.LIGHTFORGED]   = CENSUSPLUS_LIGHTFORGED
T[NLZN.RACE.VOIDELF]       = CENSUSPLUS_VOIDELF
T[NLZN.RACE.DARKIRON]      = CENSUSPLUS_DARKIRON
T[NLZN.RACE.KULTIRAN]      = CENSUSPLUS_KULTIRAN
T[NLZN.RACE.MECHAGNOME]    = CENSUSPLUS_MECHAGNOME
T[NLZN.RACE.ORC]           = CENSUSPLUS_ORC
T[NLZN.RACE.TAUREN]        = CENSUSPLUS_TAUREN
T[NLZN.RACE.TROLL]         = CENSUSPLUS_TROLL
T[NLZN.RACE.UNDEAD]        = CENSUSPLUS_UNDEAD
T[NLZN.RACE.BLOODELF]      = CENSUSPLUS_BLOODELF
T[NLZN.RACE.GOBLIN]        = CENSUSPLUS_GOBLIN
T[NLZN.RACE.HIGHMOUNTAIN]  = CENSUSPLUS_HIGHMOUNTAIN
T[NLZN.RACE.NIGHTBORNE]    = CENSUSPLUS_NIGHTBORNE
T[NLZN.RACE.MAGHAR]        = CENSUSPLUS_MAGHAR
T[NLZN.RACE.ZANDALARI]     = CENSUSPLUS_ZANDALARI
T[NLZN.RACE.VULPERA]       = CENSUSPLUS_VULPERA
T[NLZN.RACE.DRACTHYR]      = CENSUSPLUS_DRACTHYR
T[NLZN.RACE.EARTHEN]       = CENSUSPLUS_EARTHEN

---Gets the normalized string.
---
---Example: N('Druide') //--> 'DRUID'
---@param translatedString string Locale aware string.
function CPp.Normalization.N(translatedString)
  local normalized = N[translatedString]
  if not normalized then
    error('Unknown string "' .. translatedString .. '"')
  end
  return normalized
end

---Gets the translated string.
---
---Example: T('DRUID') //--> 'Druide'
---@param normalizedString any
function CPp.Normalization.T(normalizedString)
  local translatedString = T[normalizedString]
  if not translatedString then
    error('Unknown string "' .. normalizedString .. '"')
  end
  return translatedString
end
